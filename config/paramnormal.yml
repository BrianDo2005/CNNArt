# Datasets
motion_head: &id001
   name      : "motion_head"
   dataref   : ["t1_tse_tra_Kopf_0002"]
   labelref  : [0]
   dataart   : ["t1_tse_tra_Kopf_Motion_0003"]
   labelart  : [1]
   pathout   : "/home/s1241/no_backup/s1241/CNNArt/MultiScale/Headnormal"
   bestmodel : {CNN2D: "head_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
motion_abd: &id002
   name      : "motion_abd" 
   dataref   : ["t1_tse_tra_fs_mbh_Leber_0004"]
   labelref  : [0]
   dataart   : ["t1_tse_tra_fs_mbh_Leber_Motion_0005"]
   labelart  : [1]
   pathout   : "/home/s1241/no_backup/s1241/CNNArt/MultiScale/Abdnormal"
   bestmodel : {CNN2D: "abdomen_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
motion_all: &id003
   name      : "motion_all" 
   dataref   : ["t1_tse_tra_Kopf_0002", "t1_tse_tra_fs_mbh_Leber_0004"]
   labelref  : [0 0]
   dataart   : ["t1_tse_tra_Kopf_Motion_0003", "t1_tse_tra_fs_mbh_Leber_Motion_0005"]
   labelart  : [1 1]
   pathout   : "/home/s1241/no_backup/s1241/CNNArt/MultiScale/Allnormal"
   bestmodel : {CNN2D: "all_4040_lr_0.0001_bs_64", CNN3D: "xxx", MNetArt: "xxx", VNetArt: "xxx"}
#
#### set parameters ####
# database name
MRdatabase : MRPhysics
# subdirectories in database, patient, output directory
subdirs : ["newProtocol", "dicom_sorted", "testout"]
# CNN database to be modeled
selectedDatabase: *id001
# network architecture (if existing for chosen database!)
# see *.py files in subfolders of "./networks"
# naming convention: artifactType_bodyRegion_network OR artifactType_network
# CNN2D, CNN3D, MNetArt, VNetArt
network : "motion_head_CNN2D"
#network : "motion_2D_CNN"

# scaling range
range : [0, 1]
# patches
patchSize : [160, 160] # x,y
patchOverlap : 0.5 # 50%
# splitting strategy
# 'normal': percentage splitting
# 'crossvalidation_patient': cross validation on patient (leave one patient out)
# 'crossvalidation_data': cross validation on data
sSplitting : "normal"
# number of folds
nFolds : 15
# splitting in training and test set
dSplitval : 0.1
# optimization type in keras: 'grid', 'hyperas', 'none'
# v1.1: grid and none are the same -> automatic switching if batchSize|learningRate are arrays, then 'grid', else 'none'
sOpti : "none"
# optimized parameters
batchSize : [128]
lr : [0.005]
# amount of epochs
epochs : 300